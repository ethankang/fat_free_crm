-# amount = account.opportunities.pipeline.map(&:weighted_amount).sum
- amount = account.opportunities.amount_sum
- opportunity = account.opportunities.first
%li.highlight[account]
  - if account.category
    .strip{:class => account.category} #{t(account.category)}
  - else
    .strip{:style => "color: gray;"} #{t :other}

  %ul.tools
    = hook(:account_tools_before, self, :account => account)

    - if can?(:update, account)
      %li= link_to_edit(account)

    - if can?(:destroy, account)
      %li= link_to_delete(account)

  .indent
    = link_to("#{account.name} (#{account.contacts.first.try(:first_name)})", account)
    - if amount != 0.0
      %span.amount= number_to_currency(amount, :precision => 0)
    &ndash;
    %tt
      = account.location << ", " unless account.location.blank?
      - user_name = account.user.try(:full_name)
      - if user_name
        = t(:added_by, :time_ago => timeago(account.created_at), :user => h(user_name)).html_safe
      - else
        = t(:added_ago, :value => timeago(account.created_at)).html_safe
      -# = t('pluralize.contact', account.contacts.count) << " | "
      -# = t('pluralize.opportunity', account.opportunities.count) << " | "
      - if !account.tasks.pending.exists? && Setting[:tasks_required_category].include?(account.category.to_s.to_sym)
        |
        %span.urgent
          %i.fa{class: "fa-warning"} #{t :no_task}.
      - else
        |
        = t('pluralize.pending_task', account.tasks.pending.count)

    %dt
      = stars_for(account)
      = " | ".html_safe << link_to(account.website, account.website.to_url) if account.website.present?
      = " | ".html_safe << link_to_email(account.email) if account.email.present?
      = " | ".html_safe << t(:phone_small) << ": " << (account.toll_free_phone? ? account.toll_free_phone : account.phone) if account.toll_free_phone? || account.phone?

    - account.opportunities.each do |opportunity|
      %dt
        = render 'opportunities/index_short', :opportunity => opportunity

    -# - if account.tag_list.present?
    -#   %dt
    -#     .tags= tags_for_index(account)

    - if account.comments.present?
      = render :partial => 'entities/more_comments',:locals => {:entity_model => account}
      = hook(:account_bottom, self, :account => account)
